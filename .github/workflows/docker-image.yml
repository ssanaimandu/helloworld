# 워크플로우의 이름
name: Publish and Cleanup Docker Hub Images

# 워크플로우 실행 조건: 새 릴리즈가 발행될 때
on:
  release:
    types: [published]

jobs:
  build-push-cleanup:
    # 실행 환경 지정
    runs-on: ubuntu-latest

    steps:
      # 1. 소스 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Docker Hub 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 3. Docker 이미지 빌드 및 푸시 (릴리즈 태그, latest 태그)
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ github.ref_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest

      # 4. 오래된 Docker 이미지 태그 삭제
      - name: Delete old image tags
        uses: WyriHaximus/github-action-delete-docker-tag@v1
        with:
          # 필수: 도커허브 사용자 이름과 토큰(비밀번호)
          user: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

          # 필수: 정리할 이미지 리포지토리 이름
          repository: ${{ github.event.repository.name }}

          # 옵션: 남겨둘 최근 태그의 수 (기본값: 5)
          keep_latest: 5

          # 옵션: 삭제하지 않고 항상 제외할 태그 (쉼표로 구분)
          # 'latest'는 이미 푸시했으므로 삭제 대상에서 제외합니다.
          exclude_tags: latest,dev
